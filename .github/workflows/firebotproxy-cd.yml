name: FirebotProxy Deployment Pipeline

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Create FirebotProxy Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout The Solution
        uses: actions/checkout@v1

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.401

      - name: Build And Package The Solution
        shell: bash
        run: |
          app_name="FirebotProxy"
          tag=$(git describe --tags --abbrev=0)
          api_release_name="$app_name-api-$tag-${{ matrix.target }}"
          bw_release_name="$app_name-backgroundworker-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish FirebotProxy.Api/FirebotProxy.Api.csproj --framework net6.0 --runtime "${{ matrix.target }}" -c Release -o "$api_release_name" -p:PublishSingleFile=true --self-contained false
          dotnet publish FirebotProxy.BackgroundWorker/FirebotProxy.BackgroundWorker.csproj --framework net6.0 --runtime "${{ matrix.target }}" -c Release -o "$bw_release_name" -p:PublishSingleFile=true --self-contained false

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${api_release_name}.zip" "./${api_release_name}/*"
            7z a -tzip "${bw_release_name}.zip" "./${bw_release_name}/*"
          else
            tar czvf "${api_release_name}.tar.gz" "$api_release_name"
            tar czvf "${bw_release_name}.tar.gz" "$bw_release_name"
          fi

          # Delete output directories
          rm -rf "$api_release_name"
          rm -rf "$bw_release_name"
          
      - name: Publish A New GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: endsWith(tag, '-preview')
          files: "FirebotProxy-*"
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}